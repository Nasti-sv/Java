1.2 Выберите правильные объявления метода main — такие, при которых программа успешно скомпилируется и запустится.
- public static void main(String[] args)
1.2 Что произойдет, если объявить метод main с синтаксически корректной, но не поддерживаемой JVM комбинацией модификаторов, возвращаемого значения и параметров?
- Программа скомпилируется, но не запустится.
1.2 Предположим, вы написали программу, состоящую из двух классов, и в каждом классе объявили точку входа — метод main. Что из этого выйдет?
- Программа скомпилируется и запустится. Неоднозначности не возникнет, поскольку при запуске всегда явно указывается класс, в котором JVM должна искать метод main

1.2 Выберите верные утверждения про формат JAR. Может быть выбрано несколько пунктов.
- Формат JAR основан на формате ZIP. 
- В JAR-архиве должен быть специальный файл с метаданными 
1.2
JDK - Набор инструментов для разработки Java-программ, включая компилятор
JRE Набор инструментов для запуска Java-программ, включая виртуальную машину
JVM Виртуальная машина Java
JIT Подход к реализации виртуальной машины, при котором байткод не интерпретируется, а компилируется в машинный код для исполнения аппаратным процессором
JAR Формат архива, в который обычно упаковывают Java-программы и библиотеки

1.2 Напишите программу, выводящую в консоль It's alive! It's alive!
Класс должен называться "Main", это ограничение проверяющей системы.

public class main {
    public static void main(String[] args) {
        System.out.println("It's alive! It's alive!");
        }
}

1.2 ctrl+space - when you want a hint for code
Parameter info - ctrl+p

1.2 Выберите из приведенных ниже комментариев те, которые являются JavaDoc-комментариями.
/** Is this a javadoc? */
